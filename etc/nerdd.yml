# NERD config (for NERDd only)
---
common_config: nerd.yml

# Number of worker threads per process.
# This may be higher than number of CPUs, because this is not primarily intended
# to utilize computational power of multiple CPUs (which Python cannot do well
# anyway due to the GIL), but to mask long I/O operations (e.g. queries to
# external services via network)
worker_threads: 16

# List of rules and actions, which defines, whether IDEA message will be inserted into NERD or not. Order is important!
# If some rule matches, the action is done regardless what other rules are.
# Expected format:
#         Pattern  - Just use dot notation to access keys in JSON structure and use [*], when accessing list (number
#                    index can be used instead of '*', if necessary)
#                  - Generally Pattern is JSONPath, so you can use all its advantages (just omit '$.' part, it is
#                    already used)
#                         - more info: https://pypi.org/project/jsonpath-rw/      [JSONPath Syntax]
#                                      https://pypi.org/project/jsonpath-rw-ext/
#         Operator - Only supported operators right now are '!=' and '='
#         Value    - Value with which will be the result of pattern compared based on operator
#         Logical operator - AND and OR logical operators are supported to make more detailed rule on one line.
#                          - Mixing of AND and OR in one rule (one line) is NOT ALLOWED!
#         Action   - If any value of pattern search matches compared Value, the action will be done
#                  - Currently available actions:
#                       drop       --> IDEA message will not be inserted into NERD
#                       pass       --> IDEA message will be inserted into NERD
#                       sample N   --> One of N IDEA messages will be inserted into NERD
#                                    - space between 'sample' and 'N' is important)
#    final filter format:
#        Pattern Operator Value ; Action       (spaces in between do not have to be used)
#        Pattern Operator Value AND|OR Pattern Operator Value AND|OR ... ; Action
#
#    Last rule should always be empty pattern, which defines actions for every IDEA message, which does not match
#    any previously defined rule (understood as default action):
#         ';action'     (default action is pass)
# Example:
#         "Category.[*]=Test ; drop" --> Drops every IDEA message, which contains 'Test' Category
#         "Source.[*].IP4.[*]=192.168.0.1 ; pass" --> Inserts every IDEA message, which contains '192.168.0.1' source IP
#         "Node.[*].Name=NodeName AND Category.[*]=Test; drop" --> Drops every IDEA message, which contains 'NodeName'
#                     in any Node['Name'] and has Test Category
warden_filter:
  - "Category.[*]=Test ; drop"
  - "; pass"

whois:
  asn_file: "/data/nerd-whois-asn.csv"
  ipv4_file: "/data/nerd-whois-ipv4.csv"

# Event type counter module determines which types of attacks exceed threshold during given time period
event_type_counter:
  # Number of last days which is used for event type counting (if value not present module counts all available events)
  days: 30
  # Threshold in percent (default value is 5)
  threshold: 5
  # Minimal number of total events in given time period to start attack type classification (default is 0 if value not present)
  min_num_of_events: 10

caida:
  # Caida list <www.caida.org/data/as-classification> which classifies business type of AS

  # File where list with ASes, source of classification and their type is stored
  # (Module is disabled if this is commented out)
  caida_file: "/data/caida-as2types.txt"

  # Source with confidence of right classification (default is 1 if source or confidence not present)
  sources:
    CAIDA_class:
      confidence: 0.7
    peerDB_class:
      confidence: 1
    manual_class:
      confidence: 1
  # Classes and their values which are stored in DB (class name from caida file is used if "value" or class not present)
  classes:
    Transit/Access:
      value: access
    Enterpise:
      value: enterprise
    Content:
      value: content

geolocation:
  geolite2_db_path: "/data/geoip/GeoLite2-City.mmdb"

dnsbl:
  # List of blacklists to query is located in the common nerd.yml

  # Use these nameservers instead of those configured in /etc/resolv.conf (optional)
  nameservers: [127.0.0.1]
  # Maximal number of requests made to every blacklist per day
  max_requests: 150000
  # File where daily count of requests is stored (this is only prefix to which date will be appended)
  req_cnt_file: "/data/dnsbl-requests-"

fmp:
  paths: {"general" : "/data/fmp/general/"}
  models: {"general" : "/data/fmp/models/model_access_nerd_xg200_7.bin"}

dshield:
  # DShield requires to include contact information in the User-Agent header of API requests
  # (see https://www.dshield.org/api).
  # Fill in a contact to the NERD admin and uncomment the line, otherwise the DShield module is disabled.
  #user_agent: "NERD (github.com/CESNET/NERD/), contact: CHANGE_ME"
