# NERD config - blacklists
# used by blacklists2redis.py script
---
# Redis settings
redis:
  host: localhost
  port: 6379
  db: 5

# List specification:
#   id (used as key in records),
#   name (for humans),
#   url (http(s):// or file://, if local file is used, it should be updated by external cron script)
#   regex to parse the file (should match on IP address) or empty if there are only IP addresses, one per line (lines beginning with '#' are ignored),
#       or just fill regex with searching for IP, IP prefix or domain without group, if the whole blacklist is on one line or has multiple records on on line
#       - you can use special substitutions for IP address or CIDR IP address
#         - "//A" can be used for IP address, in interal part it will be substituted for IP regex
#         - "//CA" can be used for CIDR prefix (192.168.0.0/16)
#       IP address regex example, where IP address starts on every line:
#         "^(//A)"
#   refresh time (cron-like specification of when the list should be updated (in UTC), see https://apscheduler.readthedocs.io/en/latest/modules/triggers/cron.html for details)
#   other params (optional)
#
#   The last parameter is a dictionary of other parameters. The following keys are recognized:
#     url_params - dict of key-value pairs to pass as GET parameters in URL
#     headers - dict of key-value pairs specyfing additional HTTP headers
#   Example of url_params and headers usage can be viewed below in Abuse IP DB blacklist specification.
iplists:

- id: andoniafMiners
  name: Andoniaf Miners
  descr: List of crypto mining pools IPs.
  provider_link: https://github.com/andoniaf/mining-pools-list
  feed_type: secondary
  url: https://raw.githubusercontent.com/andoniaf/mining-pools-list/master/mining-pools_IP.lst
  regex: ""
  time:
    hour: 4
    minute: 50
- id: tor_project_org_ips
  name: TorProject.org IPs
  descr: TorProject.org list of all current TOR exit points (TorDNSEL)
  firehol_link: https://iplists.firehol.org/?ipset=tor_exits_30d
  provider_link: https://check.torproject.org/
  feed_type: secondary
  url: https://check.torproject.org/torbulkexitlist
  regex: ""
  # The time of updating the list was not found
  time: 
    hour: "*/4"
    minute: 10 
- id: dan_me_uk_ips
  name: dan.me.uk TOR Node List IPs
  descr: dan.me.uk TOR node list.
  provider_link: https://www.dan.me.uk/tornodes
  feed_type: secondary
  url: https://www.dan.me.uk/torlist/
  regex: ""
  # The time of updating the list was viewed here: https://www.dan.me.uk/tornodes
  time:
    hour: "*/4"
    minute: 10

# Lists from FireHOL
- id: firehol_anonymous
  name: List of all anonymizing IPs of the world, aggregated from multiple lists by FireHOL.
  descr: An ipset that includes all the anonymizing IPs of the world.
  firehol_link: https://iplists.firehol.org/?ipset=firehol_anonymous
  provider_link: https://iplists.firehol.org/
  feed_type: secondary
  url: https://iplists.firehol.org/files/firehol_anonymous.netset
  regex: "^(\\A)"
  time:
    hour: "0,6,12,18"
    minute: 5

# Lists of IP ranges or CIDR prefixes.
# Same format as in normal iplists is used, except 'regex'. If the prefix is formatted as start and end of IP network,
# then start of IP network should be caught as group 1 in regex and end of IP network should be caught as group 2
# (without regex, CIDR format is assumed)
prefixiplists:
- id: botscout_7d
  name: BotScout.com
  descr: List of bots IPs by BotScout.com.  
  firehol_link: https://iplists.firehol.org/?ipset=botscout_7d
  provider_link: http://botscout.com/
  feed_type: secondary
  url: https://iplists.firehol.org/files/botscout_7d.ipset
  regex: ""
  # The time of updating the list was viewed here: https://iplists.firehol.org/?ipset=botscout_7d
  time:
    hour: "*/4"
    minute: 10
- id: dshield
  name: DShield.org Recommended Block List
  descr: List by DShield.org summarizes the top 20 attacking<br>class C (/24) subnets over the last three days. 
  firehol_link: https://iplists.firehol.org/?ipset=dshield
  provider_link: https://www.dshield.org/
  feed_type: secondary
  url: https://www.dshield.org/block.txt
  regex: "(\\A)\\s*(\\A)"
  time:
    hour: 4
    minute: 50
#- - amazonAWS
#  - Amazon AWS
#  - https://ip-ranges.amazonaws.com/ip-ranges.json
#  - "\"ip_prefix\": \"(\\CA)\""
#  - hour: 4
#    minute: 50
- id: spamhaus_edrop
  name: Spamhaus Extended DROP List (EDROP)
  descr: List of IPs by Spamhaus that performing spamming, scanning, harvesting,<br> DNS-hijacking and DDoS attacks originating on rogue netblocks.
  firehol_link: https://iplists.firehol.org/?ipset=spamhaus_edrop
  provider_link: https://www.spamhaus.org/
  feed_type: secondary
  url: https://www.spamhaus.org/drop/edrop.txt
  regex: "^(\\CA)"
  time:
    hour: "0,6,12,18"
    minute: 5
domainlists:
- id: openphish
  name: openphis.com
  descr: List of malicious domains performing phishing.
  provider_link: https://openphish.com/
  feed_type: secondary
  url: https://openphish.com/feed.txt
  regex: ""
  time:
    hour: 4
    minute: 50
- id: booters
  name: Booters
  descr: List of Booters(Websites that publicly offer<br>DDoS attacks as a paid service) domains.
  provider_link: https://github.com/jjsantanna/booters_ecosystem_analysis
  feed_type: secondary
  url: https://raw.githubusercontent.com/jjsantanna/booters_ecosystem_analysis/master/booterblacklist.csv
  regex: "^[0-9]*?,(.*?)$"
  time:
    hour: 4
    minute: 50