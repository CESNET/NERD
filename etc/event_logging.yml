# Configuration of a EventCountLogger system, which allows to count arbitrary events across multiple processes
# (using shared counters in Redis) and in various time intervals.
redis:
  host: localhost
  port: 6379
  db: 2 # Index of Redis DB used for the counters (it shouldn't be used for anything else)

# Each "group" specifies a set of "events" which are handled together.
groups:
  rec_ops:
    # Number of tasks processed by entity type and record operation.
    # Each task is counted as exactly one event:
    #  - updated = normal task, one or more attributes of an existing record were updated
    #  - created = task resulted in creation of a new record
    #  - removed = task resulted in deletion of a record
    #  - noop = task with no operations (or only weak operations and the record doesn't exist), no change in DB
    events:
      - ip_updated
      - ip_created
      - ip_removed
      - ip_noop
      - asn_updated
      - asn_created
      - asn_removed
      - asn_noop
      - bgppref_updated
      - bgppref_created
      - bgppref_removed
      - bgppref_noop
      - ipblock_updated
      - ipblock_created
      - ipblock_removed
      - ipblock_noop
      - org_updated
      - org_created
      - org_removed
      - org_noop
    auto_declare_events: true
    intervals: [ "5s", "5m" ]
    sync-interval: 1

  # Number of processed tasks by their source (TODO)
  tasks_by_src:
    events: 
      - blacklists
      - misp_receiver
      - otx_receiver
      - updater
      - warden_receiver
      - updater_manager
      - web
      - misp_updater
    auto_declare_events: true
    intervals: ["5s", "5m"]
    sync-interval: 1

  # Logging of various errors (currently only errors in modules)
  errors:
    events: ["error_in_module"]
    auto_declare_events: true
    intervals: ["5m"]

  # Web - access to individual endpoints
  web_endpoints:
    events:
      - '/'
      - '/noaccount'
      - '/account'
      - '/set_effective_groups'
      - '/ips'
      - '/ips_count'
      - '/ip'
      - '/ajax/fetch_ip_data'
      - '/ajax/is_ip_prepared'
      - '/ajax/ip_events'
      - '/misp_event'
      - '/asn'
      - '/ipblock'
      - '/org'
      - '/bgppref'
      - '/status'
      - '/iplist'
      - '/map'
      - '/data'
      - '/data/ip_rep_csv'
      - '/data/bad_ips_txt'
      - '/data/bad_ips_med_conf_txt'
      - '/api/user_info'
      - '/api/ip'
      - '/api/ip/rep'
      - '/api/ip/fmp'
#      - '/api/ip/test'
      - '/api/ip/full'
      - '/api/search/ip'
      - '/api/prefix'
      - '/api/bad_prefixes'
      - '/api/ip/bulk'
      - '/pdns/ip'
      - '/api/shodan-info'
    # 5 min interval for Munin
    intervals: ["5m"]
    # Cache counts locally, push to Redis every 5 seconds
    sync-interval: 5

  # Web - error responses
  web_errors:
    events:
      - 400_bad_request
      - 403_no_auth_header
      - 403_invalid_token
      - 403_unauthorized
      - 404_api_bad_path
      - 404_api_ip_not_found
      - 429_rate_limit_api
      - 429_rate_limit_web
      - 503_db_error
      - 5xx_other
    # 5 min interval for Munin
    intervals: [ "5m" ]
    # Cache counts locally, push to Redis every 5 seconds
    sync-interval: 5
