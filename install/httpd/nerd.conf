# NERDweb (Flask app) configuration for Apache

Define NERDBaseLoc /nerd
Define NERDBaseLocS /nerd/
Define NERDBaseDir /nerd/NERDweb

# Uncomment this to return maintenance message instead of the web and API
#Define MAINTENANCE

# Set up WSGI script
WSGIDaemonProcess nerd_wsgi python-path=${NERDBaseDir}
WSGIScriptAlias ${NERDBaseLoc} ${NERDBaseDir}/wsgi.py

<Location ${NERDBaseLoc}>
    WSGIProcessGroup nerd_wsgi
</Location>

<Directory ${NERDBaseDir}>
    <Files wsgi.py>
        Require all granted
        <IfDefine MAINTENANCE>
            # Redirect all requests to error 503 page and set it to a simple text message
            ErrorDocument 503 "Sorry, NERD is temporarily down due to maintenance and/or upgrade."
            RewriteEngine on
            # Exception for local connections - used for testing
            RewriteCond %{REMOTE_ADDR} !=127.0.0.1
            RewriteCond %{REMOTE_ADDR} !=::1
            RewriteRule ^ - [R=503,L]
        </IfDefine>
    </Files>
</Directory>

# Static files must be served direcly by Apache, not by Flask
Alias ${NERDBaseLocS}static/ ${NERDBaseDir}/static/
<Directory ${NERDBaseDir}/static>
    Require all granted
</Directory>

# Authentication using local accounts
<Location ${NERDBaseLocS}login/basic>
    AuthType basic
    AuthName "NERD web"
    AuthUserFile "/etc/nerd/htpasswd"
    Require valid-user
</Location>

# Authentication using Shibboleth
#<Location ${NERDBaseLocS}login/shibboleth>
#    AuthType shibboleth
#    ShibRequestSetting requireSession 1
#    Require shib-session
#</Location>

# API handlers
<Location ${NERDBaseLocS}api>
    # Pass Authorization header
    WSGIPassAuthorization On
    # Return JSON-formatted error message in case something goes wrong.
    ErrorDocument 500 "{\"err_n\": 500, \"error\": \"Internal Server Error\"}"
</Location>

<VirtualHost *:80>
</VirtualHost>
