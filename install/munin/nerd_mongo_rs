#!/bin/bash

if [[ "$1" == "config" ]]; then
  # Get list of nodes in the replica-set
  nodes=$(mongosh nerd --quiet --eval 'rs.status().members.forEach((x)=>{print(x.name)})')
  cat <<'END'
graph_title MongoDB replica-set status
graph_info Status of individual nodes of the MongoDB replica-set
graph_category nerd
graph_vlabel Status code (1=pri, 2=sec)
graph_scale no
END
  for node in $nodes; do
    node2=${node//./_} # replace dots with underscores, since dot has a special meaning in Munin
    echo "${node2}.label ${node}"
    echo "${node2}.min 0"
    echo "${node2}.max 10"
    # Issue warning if any member's state is anything else than 1 (PRIMARY) or 2 (SECONDARY), as it means some problem
    # See https://docs.mongodb.com/manual/reference/replica-states/#replica-set-member-states
    echo "${node2}.warning 1:2"
  done
  exit 0
fi

# Get list of nodes in the replica-set and their status
# Print directly in munin format: <node_name>.value <state>
mongosh nerd --quiet --eval 'rs.status().members.forEach((x)=>{print(x.name.replace(/\./g, "_") + ".value " + x.state)})'
